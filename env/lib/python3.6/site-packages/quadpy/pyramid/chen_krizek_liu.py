# -*- coding: utf-8 -*-
#
import numpy
from sympy import Rational as fr, sqrt

from .helpers import _s4


class ChenKrizekLiu(object):
    """
    Chuanmiao Chen, Michal Křížek, Liping Liu,
    Numerical Integration over Pyramids,
    Adv. Appl. Math. Mech., Vol. 5, No. 3, pp. 309-320, 2013,
    <https://doi.org/10.4208/aamm.12-m12110>.

    Abstract:
    Pyramidal elements are often used to connect tetrahedral and hexahedral
    elements in the finite element method. In this paper we derive three new
    higher order numerical cubature formulae for pyramidal elements.
    """

    def __init__(self, index):

        if index == 1:
            self.weights = [fr(4, 3)]
            self.points = [[0, 0, fr(1, 4)]]
            self.degree = 1
        else:
            assert index == 2
            self.weights = [1 * [16.0 / 75.0] + 4 * [7.0 / 25.0]]
            z0 = (70 + 21 * sqrt(35)) / 280
            z1 = (35 - 2 * sqrt(35)) / 140
            self.points = [[0, 0, z0]] + _s4(sqrt(fr(5, 21)), z1)
            self.degree = 2

        self.weights = numpy.array(self.weights)
        self.points = numpy.array(self.points)
        return
